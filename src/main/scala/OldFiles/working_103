import scala.xml._
import scala.util.Try

object XmlUpdater_103 {
  def modifyXml(xml: Elem, path: Array[String], value: String): Elem = {
    def modifyNode(node: Node, path: List[String], value: String): Node = {
      path match {
        case Nil => node
        case "#text" :: Nil =>
          node match {
            case elem: Elem => elem.copy(child = Text(value))
            case _          => node
          }
        case attr :: Nil if attr.startsWith("@") =>
          node match {
            case elem: Elem =>
              elem % Attribute(None, attr.drop(1), Text(value), Null)
            case _ => node
          }
        case tag :: rest =>
          node match {
            case elem: Elem =>
              val existingChild = elem \ tag
              // If next path is a number, go to that element in the existing child. Else take the first one
              val childNum =
                if (rest.length > 0 && isInt(rest.head)) rest.head.toInt else 0
              // if (existingChild.length > childNum + 1) {

              // }

              if (existingChild.isEmpty) {
                // If the child does not exist, create it
                val newChild = modifyNode(
                  Elem(null, tag, Null, TopScope, minimizeEmpty = true),
                  rest,
                  value
                ).head
                elem.copy(child = elem.child ++ newChild)
              } else {
                // If the child exists, update it
                val updatedChildren = elem.child.map {
                  case child: Elem if child.label == tag =>
                    modifyNode(child, rest, value).headOption.getOrElse(child)
                  case other => other
                }
                elem.copy(child = updatedChildren)
              }
            case _ => node
          }
      }
    }

    // Start modification from the root
    val modified = modifyNode(xml, path.toList, value)
    modified.headOption.getOrElse(xml).asInstanceOf[Elem]
  }

  def isInt(str: String): Boolean = Try(str.toInt).isSuccess
}
